{
  "id": "151C89E2-4C73-4D0F-B81B-BBBD418542BA",
  "name": "upload-bom-dtrack",
  "friendlyName": "Upload BOM to Dependency Track",
  "description": "Upload a BOM file to Dependency Track platform.",
  "instanceNameFormat": "Upload BOM to $(dtrackURI)",
  "author": "Edouard Shaar",
  "category": "Build",
  "visibility": [
    "Build"
  ],
  "version": {
    "Major": 0,
    "Minor": 0,
    "Patch": 0
  },
  "minimumAgentVersion": "2.0.0",
  "groups": [
    {
      "name": "baseSettings",
      "displayName": "Base Settings",
      "isExpanded": true
    },
    {
      "name": "thresholds",
      "displayName": "Threshold Options",
      "isExpanded": false
    },
    {
      "name": "sslSettings",
      "displayName": "SSL Options",
      "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "dtrackProjId",
      "label": "Project Id",
      "type": "string",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "The guid of the project in Dependency Track. Required if project name and version are not specified."
    },
    {
      "name": "dtrackProjName",
      "label": "Project Name",
      "type": "string",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "The name of the project in Dependency Track. Required if project id is not specified."
    },
    {
      "name": "dtrackProjVersion",
      "label": "Project Version",
      "type": "string",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "The version of the project in Dependency Track. Required if project id is not specified."
    },
    {
      "name": "dtrackProjDescription",
      "label": "Project Description",
      "type": "string",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "Set the Project Description in Dependency Track."
    },
    {
      "name": "dtrackProjClassifier",
      "label": "Project Classifier",
      "type": "pickList",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "Set the Project Classifier in Dependency Track.",
      "options": {
        "APPLICATION": "Application",
        "FRAMEWORK": "Framework",
        "LIBRARY": "Library",
        "CONTAINER": "Container",
        "OPERATING_SYSTEM": "Operating System",
        "DEVICE": "Device",
        "FIRMWARE": "Firmware",
        "FILE": "File",
        "PLATFORM": "Platform",
        "DEVICE_DRIVER": "Device Driver",
        "MACHINE_LEARNING_MODEL": "Machine Learning Model",
        "DATA": "Data"
      }
    },
    {
      "name": "dtrackProjSwidTagId",
      "label": "Project SWID Tag ID",
      "type": "string",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "Set the Project SWID Tag ID in Dependency Track."
    },
    {
      "name": "dtrackProjGroup",
      "label": "Project Namespace / group / vendor",
      "type": "string",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "Set the Project Namespace / group / vendor identifier in Dependency Track."
    },
    {
      "name": "dtrackProjTags",
      "label": "Project Tags",
      "type": "multiLine",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "Set the Project Tags in Dependency Track. Enter each tag on a new line."
    },
    {
      "name": "dtrackProjAutoCreate",
      "label": "Auto Create Project",
      "type": "boolean",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "When set to TRUE and the project in Dependency Track does not exist, it will be created. Requires project name and version to be specified. The API Key will need the PORTFOLIO_MANAGEMENT or PROJECT_CREATION_UPLOAD permission."
    },
    {
      "name": "dtrackParentProjName",
      "label": "Parent Project Name",
      "type": "string",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "The name of the parent project in Dependency Track. Only works if Auto Create Project is set to TRUE."
    },
    {
      "name": "dtrackParentProjVersion",
      "label": "Parent Project Version",
      "type": "string",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "The version of the parent project in Dependency Track. Only works if Auto Create Project is set to TRUE."
    },
    {
      "name": "dtrackIsLatest",
      "label": "Is Latest Version",
      "type": "boolean",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "Sets the new child project as the latest version. Requires parent project name and version to be specified. Only works if Auto Create Project is set to TRUE. Defaults to false."
    },
    {
      "name": "bomFilePath",
      "label": "BOM File Path",
      "type": "filePath",
      "required": true,
      "groupName": "baseSettings",
      "helpMarkDown": "The path where the BOM file is located. (e.g. 'directory/**/bom.xml')."
    },
    {
      "name": "serviceConnection",
      "label": "Service Connection",
      "type": "connectedService:Generic",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "The Dependency Track service connection. This is used to set the Dependency Track URI and API Key. If this is set, the Dependency Track URI and API Key inputs will be ignored."
    },
    {
      "name": "dtrackAPIKey",
      "label": "API Key",
      "type": "string",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "The Dependency Track API key. This is used to authenticate to Dependency Track. Required if Service Connection is not specified."
    },
    {
      "name": "dtrackURI",
      "label": "Dependency Track URI",
      "type": "string",
      "required": false,
      "groupName": "baseSettings",
      "helpMarkDown": "The URL to the Dependency Track platform. Required if Service Connection is not specified."
    },
    {
      "name": "thresholdAction",
      "label": "Action on Threshold",
      "type": "radio",
      "defaultValue": "none",
      "required": false,
      "groupName": "thresholds",
      "helpMarkDown": "The result of the task if the threshold is attained.",
      "options": {
        "none": "No Action",
        "warn": "Warning",
        "error": "Error"
      }
    },
    {
      "name": "thresholdCritical",
      "label": "Critical Vulnerability Count",
      "type": "string",
      "defaultValue": "-1",
      "required": false,
      "groupName": "thresholds",
      "helpMarkDown": "Maximum number of critical vulnerabilities to tolerate.\nA value of -1 disables this threshold."
    },
    {
      "name": "thresholdHigh",
      "label": "High Vulnerability Count",
      "type": "string",
      "defaultValue": "-1",
      "required": false,
      "groupName": "thresholds",
      "helpMarkDown": "Maximum number of high vulnerabilities to tolerate.\nA value of -1 disables this threshold."
    },
    {
      "name": "thresholdMedium",
      "label": "Medium Vulnerability Count",
      "type": "string",
      "defaultValue": "-1",
      "required": false,
      "groupName": "thresholds",
      "helpMarkDown": "Maximum number of medium vulnerabilities to tolerate.\nA value of -1 disables this threshold."
    },
    {
      "name": "thresholdLow",
      "label": "Low Vulnerability Count",
      "type": "string",
      "defaultValue": "-1",
      "required": false,
      "groupName": "thresholds",
      "helpMarkDown": "Maximum number of low vulnerabilities to tolerate.\nA value of -1 disables this threshold."
    },
    {
      "name": "thresholdUnassigned",
      "label": "Unassigned Vulnerability Count",
      "type": "string",
      "defaultValue": "-1",
      "required": false,
      "groupName": "thresholds",
      "helpMarkDown": "Maximum number of unassigned vulnerabilities to tolerate.\nA value of -1 disables this threshold."
    },
    {
      "name": "thresholdpolicyViolationsFail",
      "label": "Fail Policy Violation Count",
      "type": "string",
      "defaultValue": "-1",
      "required": false,
      "groupName": "thresholds",
      "helpMarkDown": "Maximum number of failed policy violations to tolerate.\nA value of -1 disables this threshold."
    },
    {
      "name": "thresholdpolicyViolationsWarn",
      "label": "Warn Policy Violation Count",
      "type": "string",
      "defaultValue": "-1",
      "required": false,
      "groupName": "thresholds",
      "helpMarkDown": "Maximum number of warn policy violations to tolerate.\nA value of -1 disables this threshold."
    },
    {
      "name": "thresholdpolicyViolationsInfo",
      "label": "Info Policy Violation Count",
      "type": "string",
      "defaultValue": "-1",
      "required": false,
      "groupName": "thresholds",
      "helpMarkDown": "Maximum number of info policy violations to tolerate.\nA value of -1 disables this threshold."
    },
    {
      "name": "thresholdpolicyViolationsTotal",
      "label": "Total Policy Violation Count",
      "type": "string",
      "defaultValue": "-1",
      "required": false,
      "groupName": "thresholds",
      "helpMarkDown": "Maximum number of Total policy violations to tolerate.\nA value of -1 disables this threshold."
    },
    {
      "name": "caFilePath",
      "label": "Trusted CA certificate",
      "type": "filePath",
      "required": false,
      "groupName": "sslSettings",
      "helpMarkDown": "File path to PEM encoded CA certificate. This setting is used when Dependency Track is using a self-signed certificate or an internal CA provider for it's TLS configuration."
    }
  ],
  "messages": {
    "FileNotFound": "File path is not a file: %s",
    "UnableToReadBom": "Unable to read bom file: %s",
    "ReadingBom": "Reading BOM from location: %s",
    "UnableToReadCA": "Unable to read certificate file: %s",
    "ReadingCA": "Reading certificate from location: %s",
    "BOMUploadAndCreateStarting": "Starting BOM upload to Dependency Track at url: %s\nProject with name '%s' and version '%s' will be created if it does not exist.",
    "BOMUploadAndCreateChildStarting": "Starting BOM upload to Dependency Track at url: %s\nProject with name '%s' and version '%s' will be created as a child of project with name '%s' and version '%s'.",
    "BOMUploadWithIdStarting": "Starting BOM upload to Dependency Track for project with id '%s' at url: %s",
    "BOMUploadFailed": "Uploading the BOM to Dependency Track Failed: %s",
    "BOMUploadSucceed": "Uploading the BOM succeeded! Token: %s",
    "TaskSucceed": "Finished task execution successfully!",
    "TaskFailed": "Finished task execution with error - %s",
    "ThresholdInNotAnInteger": "%s threshold needs to be an integer value.",
    "VulnCountThresholdSurpassed": "%s vulnerability count threshold surpassed.",
    "RetrievingMetrics": "Waiting for metrics to refresh.",
    "ProcessingBOM": "Waiting for Dependency Track to finish processing the BOM.",
    "Polling": "Polling Dependency Track for update.",
    "LastBOMImport": "Last date of BOM import: %s",
    "LastMetricUpdate": "Last date of Metrics update: %s",
    "VulnCount": "Current Vulnerability Count:\nCritical: %s\nHigh:%s\nMedium: %s\nLow: %s\nUnassigned: %s\nSuppressed: %s",
    "Critical": "Critical",
    "High": "High",
    "Medium": "Medium",
    "Low": "Low",
    "Unassigned": "Unassigned",
    "PolicyViolationCount": "Current Policy Violation Count:\nFail: %s\nWarn:%s\nInfo: %s\nTotal: %s",
    "PollingFailed": "Polling Dependency Track for update Failed: %s",
    "ProjectNotFound": "Unable to find Dependency Track project with name '%s' and version '%s'",
    "GetProjectUuidStarting": "Getting project id using name '%s' and version '%s'.",
    "MissingProjectInfoWhenAutoCreate": "Project name and version is required when auto creating project.",
    "MissingProjectInfoWhenNoProjectId": "Project name and version is required when Project Id is not set.",
    "ProjectUpdateFailed": "Failed to update project: %s",
    "UpdatingProject": "Updating project."
  },
  "execution": {
    "Node20_1": {
      "target": "task.js"
    }
  }
}